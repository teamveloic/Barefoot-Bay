/**
 * Creates a placeholder banner image for use when original images are missing
 */

const fs = require('fs');
const path = require('path');

// Create the directories if they don't exist
const uploadsDir = path.join(process.cwd(), 'uploads/banner-slides');
const rootDir = path.join(process.cwd(), 'banner-slides');

if (!fs.existsSync(uploadsDir)) {
  fs.mkdirSync(uploadsDir, { recursive: true });
  console.log(`Created uploads directory: ${uploadsDir}`);
}

if (!fs.existsSync(rootDir)) {
  fs.mkdirSync(rootDir, { recursive: true });
  console.log(`Created root directory: ${rootDir}`);
}

// Base64 encoded simple PNG image with Barefoot Bay text - a 800x400 transparent PNG with text
const placeholderBase64 = 'iVBORw0KGgoAAAANSUhEUgAAAyAAAAGQCAYAAABWJQQ0AAAACXBIWXMAAAsTAAALEwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj333vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEsDIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIeEeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAnf+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJV2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHgg/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/AV/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQWHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAARKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGyUT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPEbDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhMWE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPENyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2htlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHKCpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2epO6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIpG6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3nU9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYPjGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLnm+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cRp7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0HDYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dnF2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofcn8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJgUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5pDoVQfujW0Jnjr0YfWSNImXrR1TXuMdPy2/Lj8+v1KfkR+XT4i/mW+N/46/mH+Z/5n/tf+Vf5v/t/7L/Cf8l/yX/Lf8v/z38d/z3/O/8Hf4z/kv+S/5L/kv+S/5L4AAEDBAAAAAAAAAAAAAAAAAAAAAAAAAAAMCAAADAgAAAwIAAAMCAAAAAAAAAAAAAAAAAAAAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA7e3t7Q0NDQ0NDQ0NDQ0NbUNtbUNDAAAA7QAAAEMAAAAAAAAAAAAAAAAAAAAAAEBERDswREQzMEQ7MDsAAAAAAAAAAAAAAAAAAAAAABD///8QERED/xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRleHQAAAAAQ29weXJpZ2h0IDIwMjUgQmFyZWZvb3QgQmF5IENvbW11bml0eSBBc3NvY2lhdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ29weXJpZ2h0IDIwMjUgQmFyZWZvb3QgQmF5IENvbW11bml0eSBBc3NvY2lhdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ29weXJpZ2h0IDIwMjUgQmFyZWZvb3QgQmF5IENvbW11bml0eSBBc3NvY2lhdGlvbgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ29weXJpZ2h0IDIwMjUgQmFyZWZvb3QgQmF5IENvbW11bml0eSBBc3NvY2lhdGlvbgAAAAAAR0VORVJJQyBHSUY4OWEgNzYwIDQwMAA1AgAAAAAAABgAGAAYABgAAAAAAAAAAAAAAAAAIAAAACAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOHBhaW50Lm5ldCA1LjAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWFrZSBsb2dvIGZvciBCYXJlZm9vdC5Db20AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCQVJFRk9PVCBCQVkgUExBQ0VIT0xERVIgSU1BR0UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwMDAwMDAwMDAwMDIxMDAwMDAwMDAwMDA0NTQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDU0NDYwNDAwMDAwMDAwMDA1NDQ2MDQwMDAwMDAwMDAwNTQ0NjA0MDAwMDAwMDAwMDAwMjEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhcmVmb290IEJheQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGxhY2Vob2xkZXIgYmFubmVyIGltYWdlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbWFkZSBieSBCYXJlZm9vdCBCYXkgQ29tbXVuaXR5AA==';

// Decode the base64 string to a buffer
const buffer = Buffer.from(placeholderBase64, 'base64');

// Define the placeholder paths
const placeholderPathUploads = path.join(uploadsDir, 'placeholder-banner.png');
const placeholderPathRoot = path.join(rootDir, 'placeholder-banner.png');

// Write the placeholder files
fs.writeFileSync(placeholderPathUploads, buffer);
console.log(`Created placeholder at ${placeholderPathUploads}`);

fs.writeFileSync(placeholderPathRoot, buffer);
console.log(`Created placeholder at ${placeholderPathRoot}`);

// Done!
console.log('Placeholder banner images created successfully!');
